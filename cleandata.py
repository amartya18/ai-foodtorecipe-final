# -*- coding: utf-8 -*-
"""final_project_cleandata.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Kvnwb-v_5dkkizqA4-y5kY1UhXXL7UYP
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

layer2 = pd.read_json('/content/drive/My Drive/ai_final_project/data/layer2.json')
layer1 = pd.read_json('/content/drive/My Drive/ai_final_project/layer1_cleaned01.json')

train_id = layer1['id'][layer1['partition'] == 'train'];
train_id = pd.Series(train_id)
print("amount of img training data:",len(train_id))

import numpy as np

#Shows the breakdown of recipes in layer1
layer1.groupby(['partition']).count()

#Filter layer 1 for only the recipes in Recipe 1M (Currently showing all the recipes in Recipe 1M+)
layer2ids = layer2['id']
layer1m = layer1.loc[layer1['id'].isin(layer2ids)]

layer1m.to_csv('/content/drive/My Drive/ai_final_project/data/train/layer1m.csv')

from IPython.display import clear_output

def img_to_recipe(convert, x, y):
  df = pd.DataFrame(columns = ['image_id', 'image_url', 'recipe_id'])
  for k in range(x, y):
    images = convert.loc[k]['images']
    rec_id = convert.loc[k]['id']
    for i in range(len(images)):
      im_id = images[i]['id']
      im_url = images[i]['url']
      df = df.append({'image_id': im_id, 'image_url': im_url, 'recipe_id': rec_id}, ignore_index = True)
    if k%1000 == 0:
      print(k)
      clear_output(wait=True)
  return df        
    
df_1 = img_to_recipe(layer2.loc[0:50000], 0, 50000)
df_2 = img_to_recipe(layer2.loc[50000:100000], 50000, 100000)
df_3 = img_to_recipe(layer2.loc[100000:150000], 100000, 150000)
df_4 = img_to_recipe(layer2.loc[150000:200000], 150000, 200000)
df_5 = img_to_recipe(layer2.loc[200000:250000], 200000, 250000)
df_6 = img_to_recipe(layer2.loc[250000:300000], 250000, 300000)
df_7 = img_to_recipe(layer2.loc[300000:350000], 300000, 350000)
df_8 = img_to_recipe(layer2.loc[350000:400000], 350000, 400000)
df_9 = img_to_recipe(layer2.loc[400000:402760], 400000, 402760)
df = pd.concat([df_1, df_2, df_3, df_4, df_5, df_6, df_7, df_8, df_9], axis = 0)
df['row'] = np.arange(len(df))
df.to_csv('/content/drive/My Drive/ai_final_project/data/img_to_recipe.csv')

import pandas as pd

df = pd.read_csv('/content/drive/My Drive/ai_final_project/data/img_to_recipe.csv')

print(len(df))

from IPython.display import clear_output

from PIL import Image
from urllib import request
from io import BytesIO

error_img = []
# later numpy.asarray(error_img)
# then save to csv

def url_to_img(images):
  for k in range(len(images)):
    url = images.iloc[k]['image_url']
    image_id = images.iloc[k]['image_id']

    full_path= '/content/drive/My Drive/ai_final_project/data/train/' + image_id;

    try:
      response = request.urlopen(url)
      image_data = response.read()
      pil_image = Image.open(BytesIO(image_data))
      pil_image.convert('RGB')
      pil_image = pil_image.resize((256, 256))
      pil_image.save(full_path, format='JPEG', quality=90) # not sure why 90

    except:
      error_img.append(image_id)
      print('Warning: failed to save image {}'.format(image_id))
      clear_output(wait=True)

    if k % 1000 == 0:
      print(k)
      clear_output(wait=True)

train_image = (df[df['recipe_id'].isin(train_id)])

# len of train image 619407

url_to_img(train_image.iloc[0:50000])

url_to_img(train_image.iloc[50001:100000])

u = train_image.iloc[50001:100000][train_image['image_id'] == '8dfd7956e3.jpg']['row']
# print(u)

# print(train_image.iloc[50001:100000].index.get_loc(119848))
print(50001 + 34892)
print(train_image.iloc[84893:100000].iloc[1])
# 8dfd7956e3 = 34892 so 50001 + 34892 = 84893 + 1

url_to_img(train_image.iloc[84894:100000])

url_to_img(train_image.iloc[100001:150000])
url_to_img(train_image.iloc[150001:200000])

# url_to_img(train_image.iloc[200001:250000])
# url_to_img(train_image.iloc[250001:300000])
# url_to_img(train_image.iloc[300001:350000])
# url_to_img(train_image.iloc[350001:400000])
# url_to_img(train_image.iloc[400001:450000])
# url_to_img(train_image.iloc[450001:500000])
# url_to_img(train_image.iloc[500001:550000])
# url_to_img(train_image.iloc[550001:600000])
# url_to_img(train_image.iloc[600001:619407])

import os

downloaded_train_img = len([name for name in os.listdir('/content/drive/My Drive/ai_final_project/data/train/')])

print('current train image:',downloaded_train_img)

from google.colab import auth
auth.authenticate_user()
project_id = 'colab-bucket'
!gcloud config set project {project_id}

!gsutil ls

bucket_name = 'colab-bucket-recipe1m-train-1'
!gsutil -m cp -r /content/drive/My\ Drive/ai_final_project/data/train/"*" gs://{bucket_name}/train1/

